# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to EC2
on:
  push:
    branches: [ "deploy" ]
  pull_request:
    branches: [ "deploy" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Set Gradle wrapper permissions
      run: chmod +x ./gradlew


        # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0


    - name: Build with Gradle
      run: ./gradlew clean build
      env:
        jasypt.encryptor.password: ${{ secrets.JASYPT_SECRET_KEY }}



    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

#    - name: Copy files via SSH
#      uses: appleboy/scp-action@v0.1.1
#      with:
#        host: ${{ secrets.EC2_HOST }}
#        username: ${{ secrets.EC2_USER }}
#        key: ${{ secrets.EC2_SSH_KEY }}
#        source: "build/libs/*.jar"
#        target: "~/app/"
#
#    - name: Restart application via SSH
#      uses: appleboy/ssh-action@v0.1.6
#      with:
#        host: ${{ secrets.EC2_HOST }}
#        username: ${{ secrets.EC2_USER }}
#        key: ${{ secrets.EC2_SSH_KEY }}
#        script: |
#          sudo systemctl stop myapp.service
#          sudo cp ~/app/*.jar /var/www/drugstoreproject/
#          sudo systemctl start myapp.service
#
#  # dependency-submission:
#
#  #   runs-on: ubuntu-latest
#  #   permissions:
#  #     contents: write
#
#  #   steps:
#  #   - uses: actions/checkout@v4
#  #   - name: Set up JDK 17
#  #     uses: actions/setup-java@v4
#  #     with:
#  #       java-version: '17'
#  #       distribution: 'temurin'
#
#    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#    - name: Generate and submit dependency graph
#      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
